{"version":3,"file":"static/js/307.5924d222.chunk.js","mappings":"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","sources":["components/InfoMovie/InfoMovieStyled.jsx","components/InfoMovie/InfoMovie.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapp = styled.section`\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const BtnLink = styled(Link)`\n    display: flex;\n    gap: ${p => p.theme.space[2]}px;\n    width: 105px;\n    padding: ${p => p.theme.space[3]}px;\n    background-color: ${p => p.theme.colors.secondary};\n    border: none;\n    color: ${p => p.theme.colors.baseWhite};\n    border-radius: ${p => p.theme.radii.average};\n    margin-bottom: ${p => p.theme.space[4]}px;\n    align-items: center;\n    text-decoration: none;\n`;\n\nexport const ItemWrapp = styled.div`\n    display: flex;\n    gap: ${p => p.theme.space[4]}px;\n    box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Image = styled.img`\n    display: block;\n    height: 300px;\n`;\n\nexport const HeadTitle = styled.h2`\n    margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Description = styled.p`\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Text = styled.p`\n    display: flex;\n    gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const Info = styled.div`\n    padding: ${p => p.theme.space[3]}px;\n`;\n\nexport const Titel = styled.h3`\n    margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Nav = styled.nav`\n    display: flex;\n    gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const NavItem = styled(NavLink)`\n    text-decoration: none;\n    color: ${p => p.theme.colors.text};\n`;","import { BsArrowLeft } from \"react-icons/bs\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport { poster } from \"services/Services\";\n\nimport { Wrapp, BtnLink, ItemWrapp, Image, HeadTitle, Description, Text, Info, Titel, Nav, NavItem } from \"./InfoMovieStyled\";\n\nconst InfoMovie = ({item}) => {\n    const { poster_path, title, release_date, overview, vote_average, genres } = item;\n    const date = new Date(release_date);\n    const location = useLocation();\n\n    const navItems = [\n    { href: 'cast', text: 'Cast' },\n    { href: 'reviews', text: 'Reviews'}\n    ]\n    \n    return (\n            <Wrapp>\n                <BtnLink to={location.state?.from ?? '/'} ><BsArrowLeft size='25' />Go back</BtnLink>\n                <ItemWrapp>\n                    <div>\n                        <Image src={poster + poster_path} alt=\"\" />\n                    </div>\n                    <div>\n                        <HeadTitle>{title} ({date.getFullYear()})</HeadTitle>\n                        <Description>User score: {vote_average.toFixed(1) * 10}%</Description>\n                        <Titel>Overview</Titel>\n                        <Description>{overview}</Description>\n                        <Titel>Genres</Titel>\n                        <Text>\n                            {genres.map(({ id, name }) => <span key={id}>{ name }</span>)}\n                        </Text>\n                    </div>\n                </ItemWrapp>\n                <Info>\n                <Titel>Additional information</Titel>\n                <Nav>\n                    {navItems.map(({ href, text }) => \n                        <NavItem key={href} to={href} state={{ from: location.state?.from ?? '/'}}>{text}</NavItem>\n                    )}\n                </Nav>\n                </Info>\n            </Wrapp>\n        \n    )\n}\n\nexport default InfoMovie; \n\nInfoMovie.propTypes = {\n    item: PropTypes.oneOfType([\n        PropTypes.shape({\n            poster_path: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            release_date: PropTypes.string.isRequired,\n            overview: PropTypes.string.isRequired,\n            vote_average: PropTypes.string.isRequired,\n            genres: PropTypes.arrayOf(\n                PropTypes.shape({\n                    id: PropTypes.number.isRequired,\n                    name: PropTypes.string.isRequired,\n                })\n            )\n        })\n    ])\n}","import { useState, useEffect } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\n\nimport { getInfoMovie } from \"services/Services\";\n\nimport InfoMovie from \"components/InfoMovie\";\n\nconst MoviesDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n    getInfoMovie(movieId).then(data => setMovie(data))\n    }, [movieId]);\n    \n    return (\n        <>\n            {movie && <>\n                <InfoMovie item={movie} />\n                <Outlet />\n            </>}\n        </>\n        \n    )\n}\n\nexport default MoviesDetails;"],"names":["Wrapp","styled","p","theme","space","BtnLink","Link","colors","secondary","baseWhite","radii","average","ItemWrapp","Image","HeadTitle","Description","Text","Info","Titel","Nav","NavItem","NavLink","text","item","poster_path","title","release_date","overview","vote_average","genres","date","Date","location","useLocation","to","state","from","size","src","poster","alt","getFullYear","toFixed","map","id","name","href","movieId","useParams","useState","movie","setMovie","useEffect","getInfoMovie","then","data"],"sourceRoot":""}